from __future__ import unicode_literals

import unittest

from libtrust import ec_key
from libtrust import jsonsign
from libtrust import rsa_key
from libtrust import util
from tests import fixtures_path


class JSONSignTest(unittest.TestCase):
    def setUp(self):
        self.content = {
            'hello': '123'
        }
        with open(fixtures_path('private.pem'), 'r') as f:
            self.rsa_private_key = rsa_key.RSAPrivateKey.from_pem(f.read().encode())
        with open(fixtures_path('ec-private.pem'), 'r') as f:
            self.ec_private_key = ec_key.ECPrivateKey.from_pem(f.read().encode())

    def create_js(self):
        return jsonsign.JSONSignature.from_map(self.content)

    def test_from_map(self):
        self.assertEqual('ewogICAiaGVsbG8iOiAiMTIzIgp9', self.create_js().payload.decode('utf-8'))
        self.assertEqual('eyJmb3JtYXRMZW5ndGgiOjE5LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMTYtMTEtMDZUMDk6MDQ6MzJaIn0',
                         self.create_js().protected_header(timestamp=1478423072).decode('utf-8'))

    def test_sign(self):
        rsa_js = self.create_js()
        rsa_sig_bytes, rsa_algorithm = rsa_js.sign(self.rsa_private_key, timestamp=1478423072)
        self.assertEqual(
            bytearray(
                [176, 211, 90, 236, 109, 15, 137, 15, 6, 6, 165, 219, 181, 42, 9, 152, 25, 15, 64, 216, 150, 82, 197, 105, 13,
                 178,
                 181, 37, 234, 181, 203, 70, 117, 87, 106, 85, 176, 255, 112, 95, 193, 198, 89, 87, 84, 99, 233, 180, 216, 81,
                 236,
                 34, 194, 124, 188, 248, 160, 51, 56, 248, 104, 211, 150, 217, 14, 21, 227, 169, 107, 161, 74, 9, 95, 182, 140,
                 20,
                 18, 194, 4, 121, 16, 116, 230, 179, 224, 64, 38, 241, 114, 48, 162, 192, 151, 69, 11, 146, 47, 44, 199, 208, 175,
                 147, 139, 239, 57, 247, 155, 178, 248, 8, 27, 119, 51, 193, 204, 12, 111, 14, 123, 182, 74, 43, 158, 8, 57, 126,
                 186,
                 159, 23, 56, 131, 179, 155, 150, 43, 234, 169, 189, 236, 216, 6, 5, 35, 244, 139, 237, 20, 88, 51, 216, 121, 239,
                 171, 189, 186, 246, 46, 136, 52, 237, 240, 137, 171, 223, 110, 123, 248, 196, 78, 225, 71, 140, 32, 96, 25, 170,
                 135,
                 230, 56, 57, 104, 160, 51, 57, 162, 52, 173, 79, 255, 251, 155, 241, 147, 187, 204, 173, 136, 205, 173, 170, 221,
                 21,
                 173, 150, 128, 195, 91, 53, 171, 207, 189, 226, 20, 142, 246, 77, 99, 65, 38, 231, 28, 105, 180, 21, 94, 45, 204,
                 110, 169, 145, 193, 56, 179, 209, 112, 204, 211, 52, 37, 172, 203, 85, 30, 233, 52, 25, 191, 33, 19, 74, 31, 156,
                 161, 153, 48, 100, 245, 26, 204, 218, 100, 203, 194, 168, 149, 74, 73, 4, 161, 240, 212, 125, 11, 119, 14, 96,
                 109,
                 91, 132, 47, 223, 101, 153, 225, 92, 197, 151, 162, 24, 24, 193, 31, 110, 38, 149, 111, 165, 204, 119, 171, 106,
                 118,
                 200, 219, 202, 212, 247, 34, 133, 125, 187, 58, 137, 29, 87, 81, 207, 237, 57, 139, 221, 85, 28, 68, 136, 178,
                 211,
                 46, 224, 123, 129, 174, 193, 72, 201, 240, 118, 43, 204, 202, 85, 24, 100, 253, 85, 247, 109, 215, 87, 120, 90,
                 106,
                 221, 196, 53, 29, 120, 10, 142, 211, 222, 125, 171, 126, 198, 129, 82, 164, 92, 155, 183, 129, 36, 42, 169, 68,
                 176,
                 8, 179, 220, 80, 69, 231, 229, 254, 109, 55, 19, 43, 83, 118, 97, 98, 250, 97, 164, 184, 191, 168, 158, 205, 205,
                 251, 237, 51, 130, 114, 177, 154, 242, 145, 162, 204, 235, 109, 76, 154, 242, 180, 152, 250, 48, 170, 226, 205,
                 35,
                 235, 194, 152, 186, 9, 170, 228, 24, 128, 43, 103, 195, 20, 105, 174, 255, 177, 128, 167, 39, 140, 198, 221, 51,
                 82,
                 22, 119, 214, 222, 151, 216, 128, 76, 222, 217, 197, 176, 66, 173, 151, 72, 198, 49, 21, 246, 106, 131, 157, 164,
                 199, 166, 103, 204, 85, 78, 194, 10, 38, 248, 95, 181, 233, 237, 199, 166, 254, 222, 77, 216, 221, 17, 45, 120,
                 8,
                 174, 23, 193, 150, 133, 169, 128, 107, 208, 145, 121, 130]),
            bytearray(rsa_sig_bytes)
        )
        self.assertEqual(
            rsa_algorithm, 'RS256'
        )
        self.assertEqual([self.rsa_private_key.public_key()], rsa_js.verify())

        ec_js = self.create_js()
        ec_sig_bytes, ec_algorithm = ec_js.sign(self.ec_private_key, timestamp=1478423072)
        self.assertEqual(
            ec_algorithm, 'ES256'
        )
        self.assertEqual([self.ec_private_key.public_key()], ec_js.verify())

    def test_ec_key_verify(self):
        from libtrust.jsonsign import JsHeader
        from libtrust.jsonsign import JsSignature
        sig_bytes = bytes(bytearray([
            53, 176, 9, 188, 171, 104, 49, 228, 136, 38, 67, 255, 195, 21, 235, 107, 150, 22, 152, 124, 80,
            89, 129, 125,
            160, 26, 54, 23, 67, 221, 200, 125, 230, 77, 166, 151, 195, 132, 181, 179, 15, 116, 43, 17,
            159, 236, 145,
            217, 20, 64, 47, 45, 101, 174, 255, 235, 54, 248, 139, 227, 169, 241, 60, 138
        ]))
        protected = b'eyJmb3JtYXRMZW5ndGgiOjE5LCJmb3JtYXRUYWlsIjoiQ24wIiwidGltZSI6IjIwMTYtMTEtMDZUMDk6MDQ6MzJaIn0'

        ec_js = self.create_js()
        ec_js.signatures.append(
            JsSignature(
                JsHeader(
                    self.ec_private_key.public_key(),
                    'ES256'
                ),
                util.jose_base64_url_encode(sig_bytes),
                protected
            )
        )

        self.assertEqual([self.ec_private_key.public_key()], ec_js.verify())

    def test_jws(self):
        rsa_js = self.create_js()
        rsa_js.sign(self.rsa_private_key, timestamp=1478423072)

        origin_rsa_jws = bytearray(
            [123, 10, 32, 32, 32, 34, 112, 97, 121, 108, 111, 97, 100, 34, 58, 32, 34, 101, 119, 111, 103, 73, 67, 65, 105, 97,
             71, 86, 115, 98, 71, 56, 105, 79, 105, 65, 105, 77, 84, 73, 122, 73, 103, 112, 57, 34, 44, 10, 32, 32, 32, 34, 115,
             105, 103, 110, 97, 116, 117, 114, 101, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32,
             32, 32, 32, 32, 34, 104, 101, 97, 100, 101, 114, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
             34, 106, 119, 107, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 101, 34, 58,
             32, 34, 65, 81, 65, 66, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 107, 105, 100,
             34, 58, 32, 34, 73, 73, 89, 79, 58, 79, 87, 65, 90, 58, 77, 66, 77, 71, 58, 50, 83, 73, 75, 58, 73, 75, 50, 73, 58,
             79, 80, 53, 90, 58, 72, 54, 81, 82, 58, 75, 78, 54, 89, 58, 81, 85, 71, 79, 58, 66, 85, 87, 78, 58, 84, 89, 87, 51,
             58, 74, 88, 86, 87, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 107, 116, 121, 34,
             58, 32, 34, 82, 83, 65, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 110, 34, 58, 32,
             34, 119, 113, 49, 109, 67, 109, 103, 110, 52, 54, 48, 77, 67, 54, 77, 110, 67, 113, 114, 97, 110, 81, 78, 84, 103,
             109, 75, 117, 75, 80, 108, 55, 98, 78, 72, 55, 81, 99, 54, 104, 66, 68, 71, 72, 108, 110, 73, 106, 85, 54, 113, 95,
             104, 50, 75, 88, 70, 51, 55, 84, 67, 53, 89, 57, 116, 115, 75, 118, 81, 52, 98, 56, 106, 100, 48, 83, 102, 48, 100,
             88, 70, 72, 109, 108, 56, 113, 117, 110, 83, 118, 78, 110, 113, 115, 83, 118, 111, 68, 56, 116, 83, 80, 85, 75, 113,
             88, 83, 54, 106, 114, 108, 98, 71, 83, 81, 88, 104, 121, 97, 55, 66, 76, 49, 82, 80, 71, 99, 99, 68, 53, 75, 49, 120,
             114, 86, 55, 51, 81, 108, 73, 54, 117, 70, 80, 100, 51, 65, 80, 82, 81, 89, 105, 106, 53, 69, 79, 66, 56, 73, 79, 87,
             69, 81, 117, 106, 74, 107, 95, 56, 77, 106, 99, 48, 69, 67, 57, 122, 118, 107, 53, 84, 85, 74, 98, 53, 57, 104, 107,
             79, 85, 80, 90, 51, 67, 107, 118, 83, 66, 78, 76, 78, 83, 56, 119, 112, 81, 73, 57, 56, 70, 82, 110, 73, 122, 72,
             106, 117, 97, 78, 105, 99, 113, 118, 101, 56, 48, 53, 52, 111, 120, 109, 68, 75, 105, 102, 72, 87, 121, 48, 110, 110,
             70, 49, 51, 53, 99, 88, 87, 56, 122, 107, 72, 51, 90, 116, 111, 49, 113, 56, 57, 122, 68, 50, 103, 45, 122, 99, 86,
             120, 76, 99, 82, 80, 56, 52, 85, 104, 101, 48, 110, 83, 81, 121, 103, 55, 118, 69, 89, 108, 52, 87, 108, 55, 52, 69,
             111, 54, 95, 56, 57, 113, 76, 50, 121, 69, 48, 109, 69, 105, 81, 78, 50, 52, 53, 65, 67, 65, 53, 66, 56, 87, 70, 86,
             95, 116, 51, 106, 95, 79, 68, 51, 121, 100, 79, 67, 97, 65, 79, 103, 50, 56, 118, 81, 116, 122, 99, 90, 49, 103, 104,
             50, 69, 118, 52, 82, 120, 101, 82, 55, 98, 75, 113, 53, 56, 103, 45, 82, 48, 45, 77, 77, 119, 108, 55, 110, 110, 87,
             50, 57, 109, 98, 67, 107, 99, 103, 100, 86, 86, 82, 52, 89, 80, 109, 103, 108, 80, 55, 86, 98, 54, 119, 55, 95, 78,
             98, 113, 70, 104, 110, 120, 120, 52, 69, 51, 65, 48, 53, 65, 101, 101, 118, 72, 100, 77, 100, 89, 67, 114, 116, 103,
             81, 119, 111, 103, 118, 73, 104, 100, 79, 72, 76, 99, 86, 81, 120, 74, 103, 119, 121, 49, 100, 50, 76, 103, 95, 109,
             118, 57, 114, 111, 118, 104, 67, 74, 55, 100, 51, 88, 97, 78, 69, 89, 121, 109, 54, 67, 112, 108, 67, 72, 80, 77,
             116, 102, 110, 85, 49, 76, 67, 86, 107, 65, 54, 98, 52, 52, 112, 70, 97, 79, 86, 106, 115, 65, 81, 56, 70, 118, 105,
             70, 116, 71, 88, 81, 65, 84, 111, 82, 116, 119, 111, 115, 122, 83, 97, 114, 122, 115, 108, 72, 75, 89, 100, 80, 111,
             83, 71, 70, 79, 115, 103, 78, 74, 103, 87, 54, 55, 105, 86, 105, 79, 89, 113, 71, 80, 68, 57, 55, 114, 103, 74, 65,
             48, 86, 80, 109, 48, 80, 79, 77, 78, 72, 71, 119, 95, 82, 54, 111, 45, 48, 56, 75, 104, 68, 70, 95, 79, 73, 49, 69,
             68, 99, 107, 109, 106, 88, 104, 85, 103, 103, 89, 95, 87, 67, 113, 87, 68, 120, 68, 55, 55, 69, 122, 100, 95, 119,
             114, 57, 90, 108, 98, 118, 95, 117, 83, 73, 69, 76, 57, 105, 102, 118, 66, 76, 113, 48, 54, 108, 76, 99, 88, 77, 76,
             114, 81, 98, 74, 114, 119, 77, 98, 68, 114, 110, 103, 77, 90, 77, 65, 99, 85, 107, 84, 122, 84, 104, 109, 116, 120,
             78, 115, 52, 117, 119, 117, 52, 53, 82, 45, 122, 102, 75, 99, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
             125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 97, 108, 103, 34, 58, 32, 34, 82, 83, 50, 53, 54,
             34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 105, 103, 110,
             97, 116, 117, 114, 101, 34, 58, 32, 34, 115, 78, 78, 97, 55, 71, 48, 80, 105, 81, 56, 71, 66, 113, 88, 98, 116, 83,
             111, 74, 109, 66, 107, 80, 81, 78, 105, 87, 85, 115, 86, 112, 68, 98, 75, 49, 74, 101, 113, 49, 121, 48, 90, 49, 86,
             50, 112, 86, 115, 80, 57, 119, 88, 56, 72, 71, 87, 86, 100, 85, 89, 45, 109, 48, 50, 70, 72, 115, 73, 115, 74, 56,
             118, 80, 105, 103, 77, 122, 106, 52, 97, 78, 79, 87, 50, 81, 52, 86, 52, 54, 108, 114, 111, 85, 111, 74, 88, 55, 97,
             77, 70, 66, 76, 67, 66, 72, 107, 81, 100, 79, 97, 122, 52, 69, 65, 109, 56, 88, 73, 119, 111, 115, 67, 88, 82, 81,
             117, 83, 76, 121, 122, 72, 48, 75, 45, 84, 105, 45, 56, 53, 57, 53, 117, 121, 45, 65, 103, 98, 100, 122, 80, 66, 122,
             65, 120, 118, 68, 110, 117, 50, 83, 105, 117, 101, 67, 68, 108, 45, 117, 112, 56, 88, 79, 73, 79, 122, 109, 53, 89,
             114, 54, 113, 109, 57, 55, 78, 103, 71, 66, 83, 80, 48, 105, 45, 48, 85, 87, 68, 80, 89, 101, 101, 45, 114, 118, 98,
             114, 50, 76, 111, 103, 48, 55, 102, 67, 74, 113, 57, 57, 117, 101, 95, 106, 69, 84, 117, 70, 72, 106, 67, 66, 103,
             71, 97, 113, 72, 53, 106, 103, 53, 97, 75, 65, 122, 79, 97, 73, 48, 114, 85, 95, 95, 45, 53, 118, 120, 107, 55, 118,
             77, 114, 89, 106, 78, 114, 97, 114, 100, 70, 97, 50, 87, 103, 77, 78, 98, 78, 97, 118, 80, 118, 101, 73, 85, 106,
             118, 90, 78, 89, 48, 69, 109, 53, 120, 120, 112, 116, 66, 86, 101, 76, 99, 120, 117, 113, 90, 72, 66, 79, 76, 80, 82,
             99, 77, 122, 84, 78, 67, 87, 115, 121, 49, 85, 101, 54, 84, 81, 90, 118, 121, 69, 84, 83, 104, 45, 99, 111, 90, 107,
             119, 90, 80, 85, 97, 122, 78, 112, 107, 121, 56, 75, 111, 108, 85, 112, 74, 66, 75, 72, 119, 49, 72, 48, 76, 100,
             119, 53, 103, 98, 86, 117, 69, 76, 57, 57, 108, 109, 101, 70, 99, 120, 90, 101, 105, 71, 66, 106, 66, 72, 50, 52,
             109, 108, 87, 45, 108, 122, 72, 101, 114, 97, 110, 98, 73, 50, 56, 114, 85, 57, 121, 75, 70, 102, 98, 115, 54, 105,
             82, 49, 88, 85, 99, 95, 116, 79, 89, 118, 100, 86, 82, 120, 69, 105, 76, 76, 84, 76, 117, 66, 55, 103, 97, 55, 66,
             83, 77, 110, 119, 100, 105, 118, 77, 121, 108, 85, 89, 90, 80, 49, 86, 57, 50, 51, 88, 86, 51, 104, 97, 97, 116, 51,
             69, 78, 82, 49, 52, 67, 111, 55, 84, 51, 110, 50, 114, 102, 115, 97, 66, 85, 113, 82, 99, 109, 55, 101, 66, 74, 67,
             113, 112, 82, 76, 65, 73, 115, 57, 120, 81, 82, 101, 102, 108, 95, 109, 48, 51, 69, 121, 116, 84, 100, 109, 70, 105,
             45, 109, 71, 107, 117, 76, 45, 111, 110, 115, 51, 78, 45, 45, 48, 122, 103, 110, 75, 120, 109, 118, 75, 82, 111, 115,
             122, 114, 98, 85, 121, 97, 56, 114, 83, 89, 45, 106, 67, 113, 52, 115, 48, 106, 54, 56, 75, 89, 117, 103, 109, 113,
             53, 66, 105, 65, 75, 50, 102, 68, 70, 71, 109, 117, 95, 55, 71, 65, 112, 121, 101, 77, 120, 116, 48, 122, 85, 104,
             90, 51, 49, 116, 54, 88, 50, 73, 66, 77, 51, 116, 110, 70, 115, 69, 75, 116, 108, 48, 106, 71, 77, 82, 88, 50, 97,
             111, 79, 100, 112, 77, 101, 109, 90, 56, 120, 86, 84, 115, 73, 75, 74, 118, 104, 102, 116, 101, 110, 116, 120, 54,
             98, 45, 51, 107, 51, 89, 51, 82, 69, 116, 101, 65, 105, 117, 70, 56, 71, 87, 104, 97, 109, 65, 97, 57, 67, 82, 101,
             89, 73, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 114, 111, 116, 101, 99, 116, 101, 100, 34, 58, 32,
             34, 101, 121, 74, 109, 98, 51, 74, 116, 89, 88, 82, 77, 90, 87, 53, 110, 100, 71, 103, 105, 79, 106, 69, 53, 76, 67,
             74, 109, 98, 51, 74, 116, 89, 88, 82, 85, 89, 87, 108, 115, 73, 106, 111, 105, 81, 50, 52, 119, 73, 105, 119, 105,
             100, 71, 108, 116, 90, 83, 73, 54, 73, 106, 73, 119, 77, 84, 89, 116, 77, 84, 69, 116, 77, 68, 90, 85, 77, 68, 107,
             54, 77, 68, 81, 54, 77, 122, 74, 97, 73, 110, 48, 34, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 93, 10,
             125]).decode('utf-8')
        jws = rsa_js.jws()
        self.assertEqual(origin_rsa_jws, jws)

        parsed_rsa_js = jsonsign.JSONSignature.parse_jws(jws)
        self.assertEqual(origin_rsa_jws, parsed_rsa_js.jws())

        origin_ec_jws = bytearray(
            [123, 10, 32, 32, 32, 34, 112, 97, 121, 108, 111, 97, 100, 34, 58, 32, 34, 101, 119, 111, 103, 73, 67, 65, 105, 97,
             71, 86, 115, 98, 71, 56, 105, 79, 105, 65, 105, 77, 84, 73, 122, 73, 103, 112, 57, 34, 44, 10, 32, 32, 32, 34, 115,
             105, 103, 110, 97, 116, 117, 114, 101, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32,
             32, 32, 32, 32, 34, 104, 101, 97, 100, 101, 114, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
             34, 106, 119, 107, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 99, 114, 118,
             34, 58, 32, 34, 80, 45, 50, 53, 54, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 107,
             105, 100, 34, 58, 32, 34, 85, 69, 86, 50, 58, 80, 80, 70, 50, 58, 52, 68, 77, 85, 58, 87, 90, 89, 70, 58, 87, 79, 87,
             85, 58, 54, 55, 55, 80, 58, 66, 55, 88, 85, 58, 83, 71, 70, 65, 58, 66, 77, 85, 71, 58, 78, 67, 84, 67, 58, 82, 55,
             67, 76, 58, 88, 70, 75, 90, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 107, 116,
             121, 34, 58, 32, 34, 69, 67, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 120, 34, 58,
             32, 34, 52, 112, 66, 113, 89, 108, 99, 53, 73, 85, 53, 112, 74, 104, 53, 65, 79, 118, 105, 106, 116, 69, 99, 99, 83,
             116, 121, 74, 117, 48, 100, 83, 65, 105, 122, 52, 79, 108, 68, 71, 71, 70, 107, 34, 44, 10, 32, 32, 32, 32, 32, 32,
             32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 121, 34, 58, 32, 34, 79, 84, 55, 48, 112, 85, 111, 102, 115, 75, 108, 72, 69,
             115, 113, 100, 87, 85, 85, 106, 45, 90, 70, 45, 122, 53, 98, 113, 72, 45, 57, 111, 79, 84, 74, 52, 109, 113, 66, 97,
             121, 121, 111, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32,
             32, 32, 32, 32, 34, 97, 108, 103, 34, 58, 32, 34, 69, 83, 50, 53, 54, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32,
             125, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 115, 105, 103, 110, 97, 116, 117, 114, 101, 34, 58, 32, 34, 54,
             106, 71, 83, 112, 87, 118, 95, 121, 69, 120, 99, 87, 75, 116, 45, 120, 103, 105, 115, 89, 118, 105, 81, 118, 55, 53,
             67, 79, 55, 98, 121, 106, 110, 70, 104, 106, 70, 98, 85, 73, 87, 113, 104, 122, 108, 90, 75, 106, 89, 73, 79, 67, 82,
             50, 105, 114, 52, 98, 104, 102, 115, 112, 76, 103, 121, 97, 84, 88, 105, 68, 78, 52, 97, 68, 48, 102, 55, 50, 108,
             65, 112, 87, 87, 55, 65, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 112, 114, 111, 116, 101, 99, 116, 101,
             100, 34, 58, 32, 34, 101, 121, 74, 109, 98, 51, 74, 116, 89, 88, 82, 77, 90, 87, 53, 110, 100, 71, 103, 105, 79, 106,
             69, 53, 76, 67, 74, 109, 98, 51, 74, 116, 89, 88, 82, 85, 89, 87, 108, 115, 73, 106, 111, 105, 81, 50, 52, 119, 73,
             105, 119, 105, 100, 71, 108, 116, 90, 83, 73, 54, 73, 106, 73, 119, 77, 84, 89, 116, 77, 84, 69, 116, 77, 68, 90, 85,
             77, 68, 107, 54, 77, 68, 81, 54, 77, 122, 74, 97, 73, 110, 48, 34, 10, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32,
             93, 10, 125]
        ).decode('utf-8')
        parsed_ec_js = jsonsign.JSONSignature.parse_jws(origin_ec_jws)
        self.assertEqual(origin_ec_jws, parsed_ec_js.jws())
